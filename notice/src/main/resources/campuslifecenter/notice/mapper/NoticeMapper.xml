<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="campuslifecenter.notice.mapper.NoticeMapper">
  <resultMap id="BaseResultMap" type="campuslifecenter.notice.entry.Notice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="organization" jdbcType="INTEGER" property="organization" />
    <result column="visibility" jdbcType="BIT" property="visibility" />
    <result column="importance" jdbcType="INTEGER" property="importance" />
    <result column="public_type" jdbcType="INTEGER" property="publicType" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content_type" jdbcType="INTEGER" property="contentType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="todo_ref" jdbcType="VARCHAR" property="todoRef" />
    <result column="file_ref" jdbcType="VARCHAR" property="fileRef" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="campuslifecenter.notice.entry.Notice">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, creator, organization, visibility, importance, public_type, version, title, content_type, 
    create_time, start_time, end_time, todo_ref, file_ref
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="campuslifecenter.notice.entry.NoticeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="campuslifecenter.notice.entry.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="campuslifecenter.notice.entry.NoticeExample">
    delete from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="campuslifecenter.notice.entry.Notice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="creator != null">
        creator,
      </if>
      <if test="organization != null">
        organization,
      </if>
      <if test="visibility != null">
        visibility,
      </if>
      <if test="importance != null">
        importance,
      </if>
      <if test="publicType != null">
        public_type,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="contentType != null">
        content_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="todoRef != null">
        todo_ref,
      </if>
      <if test="fileRef != null">
        file_ref,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="organization != null">
        #{organization,jdbcType=INTEGER},
      </if>
      <if test="visibility != null">
        #{visibility,jdbcType=BIT},
      </if>
      <if test="importance != null">
        #{importance,jdbcType=INTEGER},
      </if>
      <if test="publicType != null">
        #{publicType,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="todoRef != null">
        #{todoRef,jdbcType=VARCHAR},
      </if>
      <if test="fileRef != null">
        #{fileRef,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="campuslifecenter.notice.entry.NoticeExample" resultType="java.lang.Long">
    select count(*) from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.organization != null">
        organization = #{record.organization,jdbcType=INTEGER},
      </if>
      <if test="record.visibility != null">
        visibility = #{record.visibility,jdbcType=BIT},
      </if>
      <if test="record.importance != null">
        importance = #{record.importance,jdbcType=INTEGER},
      </if>
      <if test="record.publicType != null">
        public_type = #{record.publicType,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.contentType != null">
        content_type = #{record.contentType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.todoRef != null">
        todo_ref = #{record.todoRef,jdbcType=VARCHAR},
      </if>
      <if test="record.fileRef != null">
        file_ref = #{record.fileRef,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update notice
    set id = #{record.id,jdbcType=BIGINT},
      creator = #{record.creator,jdbcType=VARCHAR},
      organization = #{record.organization,jdbcType=INTEGER},
      visibility = #{record.visibility,jdbcType=BIT},
      importance = #{record.importance,jdbcType=INTEGER},
      public_type = #{record.publicType,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content_type = #{record.contentType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      todo_ref = #{record.todoRef,jdbcType=VARCHAR},
      file_ref = #{record.fileRef,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notice
    set id = #{record.id,jdbcType=BIGINT},
      creator = #{record.creator,jdbcType=VARCHAR},
      organization = #{record.organization,jdbcType=INTEGER},
      visibility = #{record.visibility,jdbcType=BIT},
      importance = #{record.importance,jdbcType=INTEGER},
      public_type = #{record.publicType,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content_type = #{record.contentType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      todo_ref = #{record.todoRef,jdbcType=VARCHAR},
      file_ref = #{record.fileRef,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="campuslifecenter.notice.entry.Notice">
    update notice
    <set>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="organization != null">
        organization = #{organization,jdbcType=INTEGER},
      </if>
      <if test="visibility != null">
        visibility = #{visibility,jdbcType=BIT},
      </if>
      <if test="importance != null">
        importance = #{importance,jdbcType=INTEGER},
      </if>
      <if test="publicType != null">
        public_type = #{publicType,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        content_type = #{contentType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="todoRef != null">
        todo_ref = #{todoRef,jdbcType=VARCHAR},
      </if>
      <if test="fileRef != null">
        file_ref = #{fileRef,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="campuslifecenter.notice.entry.NoticeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="campuslifecenter.notice.entry.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>