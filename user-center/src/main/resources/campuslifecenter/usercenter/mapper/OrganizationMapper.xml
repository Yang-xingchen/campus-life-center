<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="campuslifecenter.usercenter.mapper.OrganizationMapper">
  <resultMap id="BaseResultMap" type="campuslifecenter.usercenter.entry.Organization">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent" jdbcType="INTEGER" property="parent" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="visibility" jdbcType="INTEGER" property="visibility" />
    <result column="create_data" jdbcType="TIMESTAMP" property="createData" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parent, type, creator, name, visibility, create_data
  </sql>
  <select id="selectByExample" parameterType="campuslifecenter.usercenter.entry.OrganizationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from organization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="campuslifecenter.usercenter.entry.OrganizationExample">
    delete from organization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="campuslifecenter.usercenter.entry.Organization">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      CALL IDENTITY()
    </selectKey>
    insert into organization
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="parent != null">
        parent,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="visibility != null">
        visibility,
      </if>
      <if test="createData != null">
        create_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="parent != null">
        #{parent,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="visibility != null">
        #{visibility,jdbcType=INTEGER},
      </if>
      <if test="createData != null">
        #{createData,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="campuslifecenter.usercenter.entry.OrganizationExample" resultType="java.lang.Long">
    select count(*) from organization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update organization
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parent != null">
        parent = #{record.parent,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.visibility != null">
        visibility = #{record.visibility,jdbcType=INTEGER},
      </if>
      <if test="record.createData != null">
        create_data = #{record.createData,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update organization
    set id = #{record.id,jdbcType=INTEGER},
      parent = #{record.parent,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      visibility = #{record.visibility,jdbcType=INTEGER},
      create_data = #{record.createData,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="campuslifecenter.usercenter.entry.Organization">
    update organization
    <set>
      <if test="parent != null">
        parent = #{parent,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="visibility != null">
        visibility = #{visibility,jdbcType=INTEGER},
      </if>
      <if test="createData != null">
        create_data = #{createData,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="campuslifecenter.usercenter.entry.OrganizationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from organization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>