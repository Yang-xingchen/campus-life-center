<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="campuslifecenter.usercenter.mapper.AccountOrganizationMapper">
  <resultMap id="BaseResultMap" type="campuslifecenter.usercenter.entry.AccountOrganization">
    <id column="aid" jdbcType="VARCHAR" property="aid" />
    <id column="oid" jdbcType="INTEGER" property="oid" />
    <result column="hide" jdbcType="BIT" property="hide" />
    <result column="account_accept" jdbcType="BIT" property="accountAccept" />
    <result column="organization_accept" jdbcType="BIT" property="organizationAccept" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    aid, oid, hide, account_accept, organization_accept
  </sql>
  <select id="selectByExample" parameterType="campuslifecenter.usercenter.entry.AccountOrganizationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_organization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="campuslifecenter.usercenter.entry.AccountOrganizationExample">
    delete from account_organization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="campuslifecenter.usercenter.entry.AccountOrganization">
    insert into account_organization
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        aid,
      </if>
      <if test="oid != null">
        oid,
      </if>
      <if test="hide != null">
        hide,
      </if>
      <if test="accountAccept != null">
        account_accept,
      </if>
      <if test="organizationAccept != null">
        organization_accept,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        #{aid,jdbcType=VARCHAR},
      </if>
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="hide != null">
        #{hide,jdbcType=BIT},
      </if>
      <if test="accountAccept != null">
        #{accountAccept,jdbcType=BIT},
      </if>
      <if test="organizationAccept != null">
        #{organizationAccept,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="campuslifecenter.usercenter.entry.AccountOrganizationExample" resultType="java.lang.Long">
    select count(*) from account_organization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_organization
    <set>
      <if test="record.aid != null">
        aid = #{record.aid,jdbcType=VARCHAR},
      </if>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.hide != null">
        hide = #{record.hide,jdbcType=BIT},
      </if>
      <if test="record.accountAccept != null">
        account_accept = #{record.accountAccept,jdbcType=BIT},
      </if>
      <if test="record.organizationAccept != null">
        organization_accept = #{record.organizationAccept,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_organization
    set aid = #{record.aid,jdbcType=VARCHAR},
      oid = #{record.oid,jdbcType=INTEGER},
      hide = #{record.hide,jdbcType=BIT},
      account_accept = #{record.accountAccept,jdbcType=BIT},
      organization_accept = #{record.organizationAccept,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="campuslifecenter.usercenter.entry.AccountOrganization">
    update account_organization
    <set>
      <if test="hide != null">
        hide = #{hide,jdbcType=BIT},
      </if>
      <if test="accountAccept != null">
        account_accept = #{accountAccept,jdbcType=BIT},
      </if>
      <if test="organizationAccept != null">
        organization_accept = #{organizationAccept,jdbcType=BIT},
      </if>
    </set>
    where aid = #{aid,jdbcType=VARCHAR}
      and oid = #{oid,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="campuslifecenter.usercenter.entry.AccountOrganizationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_organization
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>