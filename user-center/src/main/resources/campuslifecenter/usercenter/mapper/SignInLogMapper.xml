<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="campuslifecenter.usercenter.mapper.SignInLogMapper">
  <resultMap id="BaseResultMap" type="campuslifecenter.usercenter.entry.SignInLog">
    <id column="aid" jdbcType="VARCHAR" property="aid" />
    <id column="sign_in_time" jdbcType="TIMESTAMP" property="signInTime" />
    <result column="sign_in_id" jdbcType="VARCHAR" property="signInId" />
    <result column="sign_out_time" jdbcType="TIMESTAMP" property="signOutTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="token" jdbcType="VARCHAR" property="token" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    aid, sign_in_time, sign_in_id, sign_out_time, ip, source, type, token
  </sql>
  <select id="selectByExample" parameterType="campuslifecenter.usercenter.entry.SignInLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sign_in_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="campuslifecenter.usercenter.entry.SignInLogExample">
    delete from sign_in_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="campuslifecenter.usercenter.entry.SignInLog">
    insert into sign_in_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        aid,
      </if>
      <if test="signInTime != null">
        sign_in_time,
      </if>
      <if test="signInId != null">
        sign_in_id,
      </if>
      <if test="signOutTime != null">
        sign_out_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="token != null">
        token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        #{aid,jdbcType=VARCHAR},
      </if>
      <if test="signInTime != null">
        #{signInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signInId != null">
        #{signInId,jdbcType=VARCHAR},
      </if>
      <if test="signOutTime != null">
        #{signOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="campuslifecenter.usercenter.entry.SignInLogExample" resultType="java.lang.Long">
    select count(*) from sign_in_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sign_in_log
    <set>
      <if test="record.aid != null">
        aid = #{record.aid,jdbcType=VARCHAR},
      </if>
      <if test="record.signInTime != null">
        sign_in_time = #{record.signInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.signInId != null">
        sign_in_id = #{record.signInId,jdbcType=VARCHAR},
      </if>
      <if test="record.signOutTime != null">
        sign_out_time = #{record.signOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sign_in_log
    set aid = #{record.aid,jdbcType=VARCHAR},
      sign_in_time = #{record.signInTime,jdbcType=TIMESTAMP},
      sign_in_id = #{record.signInId,jdbcType=VARCHAR},
      sign_out_time = #{record.signOutTime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      token = #{record.token,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="campuslifecenter.usercenter.entry.SignInLog">
    update sign_in_log
    <set>
      <if test="signInId != null">
        sign_in_id = #{signInId,jdbcType=VARCHAR},
      </if>
      <if test="signOutTime != null">
        sign_out_time = #{signOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
    </set>
    where aid = #{aid,jdbcType=VARCHAR}
      and sign_in_time = #{signInTime,jdbcType=TIMESTAMP}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="campuslifecenter.usercenter.entry.SignInLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sign_in_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>